assert_spec x86

if {[have_board linux]} {
	puts "Run script does not support Linux."
	exit 0
}

if {[have_include "power_on/qemu"]} {
	puts "Run script does not support Qemu"
	exit 0
}

build {
	core init timer lib/ld lib/libc lib/vfs lib/posix lib/vfs_legacy_oss
	driver/acpi driver/audio driver/platform app/pci_decode
	server/report_rom test/oss
}

create_boot_directory

install_config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="200"/>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>

	<start name="report_rom">
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
		<config>
			<policy label="pci_decode -> system" report="acpi -> acpi"/>
			<policy label="platform -> devices"  report="pci_decode -> devices"/>
		</config>
	</start>

	<start name="acpi" caps="350">
		<resource name="RAM" quantum="4M"/>
		<route>
			<service name="Report"> <child name="report_rom"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="pci_decode" caps="350">
		<resource name="RAM" quantum="2M"/>
		<route>
			<service name="Report">             <child name="report_rom"/> </service>
			<service name="ROM" label="system"> <child name="report_rom"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="platform" caps="100" managing_system="yes">
		<resource name="RAM" quantum="1M"/>
		<provides>
			<service name="Platform"/>
		</provides>
		<route>
			<service name="ROM" label="devices"> <child name="report_rom"/> </service>
			<service name="Timer">   <child name="timer"/> </service>
			<any-service> <parent/> </any-service>
		</route>
		<config>
			<policy label="audio -> "> <pci class="AUDIO"/> <pci class="HDAUDIO"/> </policy>
		</config>
	</start>

	<start name="audio">
		<binary name="pci_audio"/>
		<resource name="RAM" quantum="8M"/>
		<provides>
			<service name="Audio_out"/>
			<service name="Audio_in"/>
		</provides>
		<config verbose="yes">
			<!-- tested on Lenovo x260 -->
			<mixer field="outputs.master" value="128"/>
			<mixer field="record.adc-0:1_source" value="mic"/>
			<mixer field="record.adc-0:1" value="128"/>
			<mixer field="record.enable" value="on"/>
		</config>
	</start>

	<start name="test-oss">
		<resource name="RAM" quantum="10M"/>
		<config>
			<vfs>
				<dir name="dev">
					<log/>
					<legacy_oss name="dsp"/>
				</dir>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log"/>
		</config>
		<route>
			<service name="Audio_in"> <child name="audio"/> </service>
			<service name="Audio_out"> <child name="audio"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>
</config>
}

build_boot_image [build_artifacts]

run_genode_until forever
